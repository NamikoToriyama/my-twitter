// Code generated by MockGen. DO NOT EDIT.
// Source: tweet_domain.go

// Package mock_domain is a generated GoMock package.
package mock_app

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/mercari/Week6/Week6/NamikoToriyama/model"
)

// MockTweetDomain is a mock of TweetDomain interface
type MockTweetDomain struct {
	ctrl     *gomock.Controller
	recorder *MockTweetDomainMockRecorder
}

// MockTweetDomainMockRecorder is the mock recorder for MockTweetDomain
type MockTweetDomainMockRecorder struct {
	mock *MockTweetDomain
}

// NewMockTweetDomain creates a new mock instance
func NewMockTweetDomain(ctrl *gomock.Controller) *MockTweetDomain {
	mock := &MockTweetDomain{ctrl: ctrl}
	mock.recorder = &MockTweetDomainMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTweetDomain) EXPECT() *MockTweetDomainMockRecorder {
	return m.recorder
}

// CreateBlog mocks base method
func (m *MockTweetDomain) CreateBlog(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateBlog", arg0, arg1)
}

// CreateBlog indicates an expected call of CreateBlog
func (mr *MockTweetDomainMockRecorder) CreateBlog(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBlog", reflect.TypeOf((*MockTweetDomain)(nil).CreateBlog), arg0, arg1)
}

// DeleteBlog mocks base method
func (m *MockTweetDomain) DeleteBlog(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteBlog", arg0, arg1)
}

// DeleteBlog indicates an expected call of DeleteBlog
func (mr *MockTweetDomainMockRecorder) DeleteBlog(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBlog", reflect.TypeOf((*MockTweetDomain)(nil).DeleteBlog), arg0, arg1)
}

// EditBlog mocks base method
func (m *MockTweetDomain) EditBlog(arg0 http.ResponseWriter, arg1 *http.Request) *model.Tweet {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EditBlog", arg0, arg1)
	ret0, _ := ret[0].(*model.Tweet)
	return ret0
}

// EditBlog indicates an expected call of EditBlog
func (mr *MockTweetDomainMockRecorder) EditBlog(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EditBlog", reflect.TypeOf((*MockTweetDomain)(nil).EditBlog), arg0, arg1)
}

// GetBlog mocks base method
func (m *MockTweetDomain) GetBlog(arg0 http.ResponseWriter, arg1 *http.Request) *model.Tweet {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlog", arg0, arg1)
	ret0, _ := ret[0].(*model.Tweet)
	return ret0
}

// GetBlog indicates an expected call of GetBlog
func (mr *MockTweetDomainMockRecorder) GetBlog(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlog", reflect.TypeOf((*MockTweetDomain)(nil).GetBlog), arg0, arg1)
}

// ListBlogs mocks base method
func (m *MockTweetDomain) ListBlogs(arg0 http.ResponseWriter, arg1 *http.Request) []*model.Tweet {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListBlogs", arg0, arg1)
	ret0, _ := ret[0].([]*model.Tweet)
	return ret0
}

// ListBlogs indicates an expected call of ListBlogs
func (mr *MockTweetDomainMockRecorder) ListBlogs(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListBlogs", reflect.TypeOf((*MockTweetDomain)(nil).ListBlogs), arg0, arg1)
}
